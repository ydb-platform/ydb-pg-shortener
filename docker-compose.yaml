services:
  shortener-ydb:
    depends_on:
      ydb:
        condition: service_healthy
    restart: always
    build: .
    environment:
      - PG_HOST=ydb
    ports:
      - "2001:8080"
  shortener-postgres:
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    build: .
    environment:
      - PG_HOST=postgres
    ports:
      - "2002:8080"
  ydb:
    image: ghcr.io/ydb-platform/local-ydb:nightly
    hostname: localhost
    restart: always
    healthcheck:
      test: "/bin/sh /health_check"
      interval: 1s
      start_period: 1m
    command: "bash -c 'rm -rf /ydb_data; sh ./initialize_local_ydb'"
    environment:
      - "GRPC_TLS_PORT=2135"
      - "GRPC_PORT=2136"
      - "MON_PORT=8765"
      - "YDB_USE_IN_MEMORY_PDISKS=true"
      - "YDB_LOCAL_SURVIVE_RESTART=true"
      - "POSTGRES_USER=root"
      - "POSTGRES_PASSWORD=1234"
      - "YDB_FEATURE_FLAGS=enable_temp_tables"
      - "YDB_TABLE_ENABLE_PREPARED_DDL=true"
    ports:
      - "5432:5432" # Postgres port
      - "3001:8765" # Monitor
  postgres:
    image: postgres:14
    restart: always
    environment:
      - "POSTGRES_USER=root"
      - "POSTGRES_PASSWORD=1234"
      - "POSTGRES_DB=local"
    ports:
      - "5433:5432"
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 5s
      timeout: 1m
  pgadmin:
    image: dpage/pgadmin4:7.6
    environment:
      - "PGADMIN_DEFAULT_EMAIL=test@test.com"
      - "PGADMIN_DEFAULT_PASSWORD=test"
      - "PGADMIN_CONFIG_X_FRAME_OPTIONS=\"\""
      - "PGADMIN_CONFIG_X_CONTENT_TYPE_OPTIONS=\"\""
      - "PGADMIN_CONFIG_X_XSS_PROTECTION=\"\""
    ports:
      - "3002:80"
  nginx:
    image: nginx:1.25.2
    ports:
      - "3000:80"
    volumes:
      - "./html:/usr/share/nginx/html:ro"
  autohealth:
    image: willfarrell/autoheal
    restart: always
    environment:
      - "AUTOHEAL_CONTAINER_LABEL=all"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"